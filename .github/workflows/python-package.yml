name: Test
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: '3.7'
          - python-version: '3.8'
          - python-version: '3.9'

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install -U coverage flake8 pip pytest pytest-coverage

      - name: Flake8
        run: flake8 sqlitedict.py tests

      - name: Install sqlitedict
        run: python setup.py install

      - name: Prepare tests subdirectory
        run: |
          rm -f tests/db
          mkdir -p tests/db

      - name: Run tests
        run: pytest tests --cov=sqlitedict

      - name: Run doctests
        run: python -m doctest README.rst
        
  test-aarch64:
    name: build_arm64
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false 
    steps:
    - uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Build and Test for arm64
      run: |
           docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
           arm64v8/ubuntu:latest \
           bash -exc 'apt-get update && apt-get -y install git && \
           ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
           apt install -y software-properties-common && \
           add-apt-repository ppa:deadsnakes/ppa && \
           apt install -y python3.8 && \
           apt install -y python3.8-venv && \
           python3.8 -m venv venv38 && \
           source venv38/bin/activate && \
           python -m pip install --upgrade pip && \
           python -m pip install -U coverage flake8 pip pytest pytest-coverage && \
           flake8 sqlitedict.py tests && \
           python setup.py install && \
           rm -f tests/db && \
           mkdir -p tests/db && \
           pytest tests --cov=sqlitedict'            
